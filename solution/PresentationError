import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;
public class Solution {
public static void main(String[] args)
{
BufferedReader stdIn=new BufferedReader(new InputStreamReader(System.in));
String cur;
try {
int count = Integer.valueOf(stdIn.readLine());
for(int i = 0; i < count; i++)
{
cur = stdIn.readLine();
System.out.print(isValid(cur));
      if(i != count - 1)
             System.out.println();
}
} catch (IOException e) {
e.printStackTrace();
}
}
public static boolean isValid(String s) {
Stack<Character> st = new Stack<Character>();
char temp;
for(int i = 0; i < s.length(); i++)
{
switch(s.charAt(i))
{
case '(':
st.push('(');
break;
case '{':
st.push('{');
break;
case '[':
st.push('[');
break;
case ')':
if(st.isEmpty())
return false;
temp = st.pop();
if(temp != '(')
return false;
break;
case ']':
if(st.isEmpty())
return false;
temp = st.pop();
if(temp != '[')
return false;
break;
case '}':
if(st.isEmpty())
return false;
temp = st.pop();
if(temp != '{')
return false;
break;
}
}
if(st.isEmpty())
return true;
else
return false;
}
}